{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactFullGuide\\\\PracticeReactRouter\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Root from \"./components/Root\";\nimport HomePage from \"./components/HomePage\";\nimport EventsPage from \"./components/EventsPage\";\nimport EventDetailPage from \"./components/EventDetailPage\";\nimport NewEventPage from \"./components/NewEventPage\";\nimport EditEventPage from \"./components/EditEventPage\";\nimport EventsNavigation from \"./components/EventsNavigation\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const definitions = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"events\",\n      element: /*#__PURE__*/_jsxDEV(EventsNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 35\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 34\n        }, this)\n      }, {\n        path: \":someId\",\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 38\n        }, this)\n      }, {\n        path: \"new\",\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 34\n        }, this)\n      }, {\n        path: \":someId/edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 43\n        }, this)\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: definitions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","Root","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","EventsNavigation","jsxDEV","_jsxDEV","App","definitions","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","router","_c","$RefreshReg$"],"sources":["E:/ReactFullGuide/PracticeReactRouter/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["import { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Root from \"./components/Root\";\nimport  HomePage  from \"./components/HomePage\";\nimport  EventsPage  from \"./components/EventsPage\";\nimport  EventDetailPage  from \"./components/EventDetailPage\";\nimport  NewEventPage  from \"./components/NewEventPage\";\nimport  EditEventPage  from \"./components/EditEventPage\";\nimport EventsNavigation from \"./components/EventsNavigation\"\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nfunction App() {\n  const definitions = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <Root />,\n      children: [\n        {\n          index: true,\n          element: <HomePage />,\n        },\n        {path: \"events\", element: <EventsNavigation/>, children: [\n          {index: true, element: <EventsPage/>},\n          {path: \":someId\", element: <EventDetailPage/>},\n          {path: \"new\", element: <NewEventPage/>},\n          {path: \":someId/edit\", element: <EditEventPage/>},\n        ]}\n        \n      ],\n    },\n  ]);\n  return <RouterProvider router={definitions}/>\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAQC,QAAQ,MAAO,uBAAuB;AAC9C,OAAQC,UAAU,MAAO,yBAAyB;AAClD,OAAQC,eAAe,MAAO,8BAA8B;AAC5D,OAAQC,YAAY,MAAO,2BAA2B;AACtD,OAAQC,aAAa,MAAO,4BAA4B;AACxD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,WAAW,GAAGX,mBAAmB,CAAC,CACtC;IACEY,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEJ,OAAA,CAACR,IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACjBC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,IAAI;MACXN,OAAO,eAAEJ,OAAA,CAACP,QAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACtB,CAAC,EACD;MAACL,IAAI,EAAE,QAAQ;MAAEC,OAAO,eAAEJ,OAAA,CAACF,gBAAgB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MAAEC,QAAQ,EAAE,CACvD;QAACC,KAAK,EAAE,IAAI;QAAEN,OAAO,eAAEJ,OAAA,CAACN,UAAU;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,CAAC,EACrC;QAACL,IAAI,EAAE,SAAS;QAAEC,OAAO,eAAEJ,OAAA,CAACL,eAAe;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,CAAC,EAC9C;QAACL,IAAI,EAAE,KAAK;QAAEC,OAAO,eAAEJ,OAAA,CAACJ,YAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,CAAC,EACvC;QAACL,IAAI,EAAE,cAAc;QAAEC,OAAO,eAAEJ,OAAA,CAACH,aAAa;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,CAAC;IAClD,CAAC;EAGN,CAAC,CACF,CAAC;EACF,oBAAOR,OAAA,CAACV,cAAc;IAACqB,MAAM,EAAET;EAAY;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC/C;AAACI,EAAA,GArBQX,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}