{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactFullGuide\\\\PracticeReactRouter\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Root from \"./pages/Root\";\nimport HomePage from \"./pages/HomePage\";\nimport Events, { loader as eventsLoader } from \"./pages/Events\";\nimport EventDetailPage, { loader as eventDatail } from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport EventsRoot from \"./pages/EventsRoot\";\nimport Error from \"./pages/Error\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const definitions = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"events\",\n      element: /*#__PURE__*/_jsxDEV(EventsRoot, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this),\n        loader: eventsLoader\n      }, {\n        path: \":someId\",\n        loader: eventDatail,\n        children: [{\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 28\n          }, this)\n        }, {\n          path: \":someId/edit\",\n          element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 50\n          }, this)\n        }]\n      }, {\n        path: \"new\",\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }, this)\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: definitions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","Root","HomePage","Events","loader","eventsLoader","EventDetailPage","eventDatail","NewEventPage","EditEventPage","EventsRoot","Error","jsxDEV","_jsxDEV","App","definitions","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","router","_c","$RefreshReg$"],"sources":["E:/ReactFullGuide/PracticeReactRouter/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["import { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Root from \"./pages/Root\";\nimport HomePage from \"./pages/HomePage\";\nimport Events, { loader as eventsLoader } from \"./pages/Events\";\nimport EventDetailPage, {\n  loader as eventDatail,\n} from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport EventsRoot from \"./pages/EventsRoot\";\nimport Error from \"./pages/Error\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nfunction App() {\n  const definitions = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <Root />,\n      errorElement: <Error />,\n      children: [\n        {\n          index: true,\n          element: <HomePage />,\n        },\n        {\n          path: \"events\",\n          element: <EventsRoot />,\n          children: [\n            {\n              index: true,\n              element: <Events />,\n              loader: eventsLoader,\n            },\n            {\n              path: \":someId\",\n              loader: eventDatail,\n              children: [\n                {\n                  index: true,\n                  element: <EventDetailPage />,\n\n                },\n                { path: \":someId/edit\", element: <EditEventPage /> },\n              ],\n            },\n\n            { path: \"new\", element: <NewEventPage /> },\n          ],\n        },\n      ],\n    },\n  ]);\n  return <RouterProvider router={definitions} />;\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,MAAM,IAAIC,MAAM,IAAIC,YAAY,QAAQ,gBAAgB;AAC/D,OAAOC,eAAe,IACpBF,MAAM,IAAIG,WAAW,QAChB,yBAAyB;AAChC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,KAAK,MAAM,eAAe;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,WAAW,GAAGf,mBAAmB,CAAC,CACtC;IACEgB,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEJ,OAAA,CAACZ,IAAI;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACjBC,YAAY,eAAET,OAAA,CAACF,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACvBE,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,IAAI;MACXP,OAAO,eAAEJ,OAAA,CAACX,QAAQ;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACtB,CAAC,EACD;MACEL,IAAI,EAAE,QAAQ;MACdC,OAAO,eAAEJ,OAAA,CAACH,UAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvBE,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,IAAI;QACXP,OAAO,eAAEJ,OAAA,CAACV,MAAM;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QACnBjB,MAAM,EAAEC;MACV,CAAC,EACD;QACEW,IAAI,EAAE,SAAS;QACfZ,MAAM,EAAEG,WAAW;QACnBgB,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,IAAI;UACXP,OAAO,eAAEJ,OAAA,CAACP,eAAe;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAE7B,CAAC,EACD;UAAEL,IAAI,EAAE,cAAc;UAAEC,OAAO,eAAEJ,OAAA,CAACJ,aAAa;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE,CAAC;MAExD,CAAC,EAED;QAAEL,IAAI,EAAE,KAAK;QAAEC,OAAO,eAAEJ,OAAA,CAACL,YAAY;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE,CAAC;IAE9C,CAAC;EAEL,CAAC,CACF,CAAC;EACF,oBAAOR,OAAA,CAACd,cAAc;IAAC0B,MAAM,EAAEV;EAAY;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChD;AAACK,EAAA,GAxCQZ,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}